{
    "contents" : "\n#setwd(\"G://work_2013/Papers/Paper1/GHG_kong/2009\")\n#source(\"G://work_2013/Papers/Paper1/ghg_function1.r\")\n# We load aggregation function to obtain GHG fit for the model.\n#source(\"G://work_2013/Papers/Paper1/agg.r\")\n# loading data\n\n#setwd(\"G://work_2013/Papers/Paper1/GHG_kong/2009\")\nsource(\"ghg_function1.r\")\n# We load aggregation function to obtain GHG fit for the model.\nsource(\"agg.r\")\n\n\n\n#Energy Balance in Gross Calorific Value\nEB_G=read.csv(file=\"EB_G_2009.csv\",header=T)\n\n#Conversion Factor from Gross Calorific Value to Net Calorific Value\nCF=read.csv(file=\"CF_2009.csv\",header=T)\n\n#Row names of IO table\nRowName=read.csv(file=\"EB_row_2009.csv\",header=F)\n\n# IO tables in basic price (YR 2009)\nIO_Domestic=read.csv(file=\"IO_Domestic_2009.csv\", header=T)\nIO_Import=read.csv(file=\"IO_Import_2009.csv\",header=T)\nIO_whole=read.csv(file=\"IO_whole_2009.csv\",header=T)\nEC=read.csv(file=\"EC1996.csv\",header=T)\n\n# Coefficients : buring rate of Crude Oil/Change in Oil Product stock/Oil product domestic production\nOil.Data=read.csv(file=\"OilData_2009.csv\",header=T)\nYR=2009\n#YR_1=YR-1\nECO2_2009=Gen_CO2.1(EB_G,CF,RowName,IO_Domestic,IO_Import,IO_whole,EC,Oil.Data,YR)\n\nghg_2009_m=ECO2_2009[[1]]\nghg_2009_T=ECO2_2009[[2]]\n\n## ghg fit for model\n# loading index file to aggregate CO2 generation : feeding files for mocel\n#(1) GTAP equivalent set\n# row index is index for fuels and electricities. column index is the same with regular column index , except we don't have import and import taxes\n\ngindr=read.csv(file=\"gdix_r2.csv\",header=F)\n#gindc=read.csv(file=\"G://work_2013/Papers/Paper1/kdix_c2.csv\",header=F)\ngindc=read.csv(file=\"kdix_c2.csv\",header=F)\n# we cut down import taxes\ngindc=gindc[(1:65),]\n# we cut industry index column and the total row\ngdata2009=ghg_2009_m[-22,-1]\n# change into matrix\ngdata2009.m=as.matrix(gdata2009)\n# obtain gtap equivalence in column, model equivalance in row\nghg2009_prelim=agg2(gindr,gindc,gdata2009.m)\n\n# (2) grown up ghg\n# row is already aggregated to fit for the model, column needs some more aggregation\ng22_r_g=as.matrix(1:7)\n#g22_c_g=read.csv(file=\"G://work_2013/Papers/Paper1/g22_c.csv\",header=F)\ng22_c_g=read.csv(file=\"g22_c.csv\",header=F)\n# Again we cut down column indices for import and import taxes\ng22_c_g=g22_c_g[(1:31),]\nghg2009_prelim.m=as.matrix(ghg2009_prelim)\nghg2009_grown=agg2(g22_r_g,g22_c_g,ghg2009_prelim.m)\n# We cut down final demand, only keep CO2 generated via intermediate demand consumption \nghg2009_grown=ghg2009_grown[,(1:22)]\n\n# (3) baby ghg\nbr_g=g22_r_g\n#bc_g=read.csv(file=\"G://work_2013/Papers/Paper1/bc.csv\",header=F)\nbc_g=read.csv(file=\"bc.csv\",header=F)\nbc_g=bc_g[(1:21),]\nghg2009_baby=agg2(br_g,bc_g,ghg2009_prelim.m)\nghg2009_baby=ghg2009_baby[,(1:12)]\n\n#(4) add name of industries\nrownames(ghg2009_grown)=c(\"Elec-c\",\"Oil-c\",\"Roil-c\",\"Coal-c\",\"Gas-c\",\"Nuclear-C\",\"Hydro-C\")\ncolnames(ghg2009_grown)=c(\"AFF-a\",\"Paper-a\",\"Chemi-a\",\"I_S-a\",\"Nonfm-a\",\"Mineral-a\",\"Food-a\",\"Othr_m-a\",\"Vehicle-a\",\"Water-a\",\"Cons-a\",\"Wood-a\",\"Trans-a\",\"Serv-a\",\"Elec-a\",\"Oil-a\",\"ROil-a\",\"Coal-a\",\"Gas-a\",\"Nuclear-a\",\"Hydro-a\",\"Dwelling-a\")\n\nrownames(ghg2009_baby)=c(\"Elec-c\",\"Oil-c\",\"Roil-c\",\"Coal-c\",\"Gas-c\",\"Nuclear-C\",\"Hydro-C\")\ncolnames(ghg2009_baby)= c(\"agri-a\",\"eint-a\",\"othr-a\",\"serv-a\",\"trans-a\",\"elec-a\",\"oil-a\",\"roil-a\",\"coal-a\",\"Gas-a\",\"Nuclear-a\",\"Hydro-a\")\n\n#(5) take out zero cells. Oil/Elec/Hydro/Nuclear are out. They don't generate CO2\nghg2009_grown_core=ghg2009_grown[c(\"Roil-c\",\"Coal-c\",\"Gas-c\"),]/100 #convert units in 100,000 ton \nghg2009_grown_core[\"Coal-c\",\"Coal-a\"]=0 # CO2 generated in coal mining is ignored. It is rather small (300,000 ton)\nghg2009_grown_core=ghg2009_grown_core*(ghg2009_grown_core>=1) #Ignore emission less than 100,000 ton\n\n#(6) add process CO2\nghg2009_grown_core=rbind(ghg2009_grown_core, rep(0,(dim(ghg2009_grown)[2])))\nghg2009_grown_core[(dim(ghg2009_grown_core)[1]),c(\"Mineral-a\",\"Chemi-a\",\"I_S-a\")]=c(287.6894,1.4893,1.6919)\nrownames(ghg2009_grown_core)[(dim(ghg2009_grown_core)[1])]=\"Process\"\nghg2009_grown_core=rbind(ghg2009_grown_core,colSums(ghg2009_grown_core))\nrownames(ghg2009_grown_core)[(dim(ghg2009_grown_core)[1])]=\"Total\"\n\n#(7) take out zero cells. add process CO2 (baby)\nghg2009_baby_core=ghg2009_baby[c(\"Roil-c\",\"Coal-c\",\"Gas-c\"),]/100\nghg2009_baby_core[\"Coal-c\",\"coal-a\"]=0\nghg2009_baby_core=ghg2009_baby_core*(ghg2009_baby_core>=1)\nghg2009_baby_core=rbind(ghg2009_baby_core, rep(0,(dim(ghg2009_baby_core)[2])))\nghg2009_baby_core[(dim(ghg2009_baby_core)[1]),\"eint-a\"]=287.6894\nrownames(ghg2009_baby_core)[(dim(ghg2009_baby_core)[1])]=\"Process\"\nghg2009_baby_core=rbind(ghg2009_baby_core,colSums(ghg2009_baby_core))\nrownames(ghg2009_baby_core)[(dim(ghg2009_baby_core)[1])]=\"Total\"\n\n#write.csv(ghg2009_grown_core,file=\"G://work_2013/Papers/Paper1/ghg2009_gw_core.csv\")\n#write.csv(ghg2009_baby_core,file=\"G://work_2013/Papers/Paper1/ghg2009_baby_core.csv\")\n\n\n\n\n",
    "created" : 1429233757364.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3283804438",
    "id" : "8A5A6946",
    "lastKnownWriteTime" : 1429234725,
    "path" : "D:/ghg/ghg_gen_2009.r",
    "project_path" : "ghg_gen_2009.r",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}